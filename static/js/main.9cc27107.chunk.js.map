{"version":3,"sources":["logo.svg","components/Greet.js","components/Message.js","components/Button.js","commons/httpclient.js","services/helloServices.js","components/Hello.js","services/employeeService.js","components/Employee.js","App.js","reportWebVitals.js","index.js"],"names":["Greet","props","name","chilren","Message","Button","addCounter","setState","count","state","resetCounter","onClick","this","style","background","borderColor","src","React","Component","axios","create","baseURL","headers","httpclient","get","Hello","useState","hello","setHello","useEffect","helloServices","then","response","data","catch","err","console","log","Employee","employees","setEmployees","EmployeeService","border","map","employee","department","location","App","className","logo","alt","paddingBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAe,G,MAAA,IAA0B,kC,eCS1BA,MATf,SAAeC,GACX,OACI,gCACI,qCAAQA,EAAMC,QACbD,EAAME,YCEJC,EAJC,WACZ,OAAO,4BAAG,6D,gCCkDCC,E,kDAhDX,aAAc,IAAD,8BACT,gBAMJC,WAAa,WACT,EAAKC,SACD,CACIC,MAAQ,EAAKC,MAAMD,MAAQ,KAV1B,EAebE,aAAe,WACX,EAAKH,SACD,CACIC,MAAQ,KAhBhB,EAAKC,MAAQ,CACTD,MAAQ,GAHH,E,0CAuBb,WACI,OACI,iCACA,+BACI,4BAIJ,+BACI,gCACI,wBAAQG,QAAUC,KAAKN,WACvBO,MAAO,CAACC,WAAW,cAAeC,YAAY,eAD9C,SAEI,qBAAKC,IAAK,gFAEd,uBACA,wBAAQL,QAAUC,KAAKF,aAAvB,8BACA,yCAAYE,KAAKH,MAAMD,MAAvB,0B,GAzCCS,IAAMC,W,eCDZC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,+BACTC,QAAS,CACL,eAAgB,sBCCT,EAJE,WACb,OAAOC,EAAWC,IAAI,WCyBXC,EAvBD,WAGV,MAAyBC,mBAAS,kBAAlC,mBAAMC,EAAN,KAAaC,EAAb,KAiBA,OAXAC,qBAAY,WACRC,IACCC,MAAK,SAAAC,GACFJ,EAASI,EAASC,SAErBC,OAAM,SAAAC,GACHC,QAAQC,IAAI,iCAKbV,GCnBI,EAJM,WACjB,OAAOJ,EAAWC,IAAI,eC8CXc,EA9CE,WACb,MAAkCZ,mBAAS,IAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAX,qBACI,WACIY,IACCV,MACG,SAAAC,GACIQ,EAAaR,EAASC,SAG7BC,OACG,WACIE,QAAQC,IAAI,iCAOxB,cADoE,CACpE,iBACI,mDACA,8BACI,wBAAOK,OAAS,IAAhB,UACI,+BACI,4CACA,0CACA,yCAGAH,EAAUI,KACN,SAAAC,GAAQ,OACJ,+BACI,6BAAKA,EAASC,aACd,6BAAKD,EAASE,WACd,6BAAKF,EAAS1C,sBCQnC6C,MApCf,WACE,OACE,iCACA,+BACA,4BAKA,+BACA,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,4CACE,qBAAKhC,IAAKiC,EAAMD,UAAU,WAAWE,IAAI,SACzC,4BACA,iDAEA,4BAAIzB,MACJ,cAAC,EAAD,IACA,cAAC,EAAD,CAAOvB,KAAK,SACZ,cAAC,EAAD,CAAOA,KAAK,QACZ,cAAC,EAAD,IACA,cAAC,EAAD,IACA,mDACA,uBACA,qBAAKc,IAAI,mCACTkC,IAAI,MAAMrC,MAAO,CAACsC,cAAe,iBCxB1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9cc27107.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function Greet(props){\r\n    return  (\r\n        <div>\r\n            <h1>Hi {props.name}</h1>\r\n            {props.chilren}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Greet","//let, var, const\r\n// to make this an arrow function change funtion to const and then [func name] = () =>\r\nconst Message = () => {\r\n    return <p><b>scuffed na cookie clicker</b></p>\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\n\r\n//class component - stateful component\r\nclass Button extends React.Component{\r\n\r\n    constructor(){                  // same as java, it also has a constructor first\r\n        super()                     // need to call the super constructor\r\n        this.state = {              // this is equal to a json object\r\n            count : 0               // we want an increment each time we click the button\r\n        }\r\n    }\r\n\r\n    addCounter = () => {                      // arrow function\r\n        this.setState(\r\n            {\r\n                count : this.state.count + 1\r\n            }\r\n        )\r\n    }\r\n\r\n    resetCounter = () => {\r\n        this.setState(\r\n            {\r\n                count : 0\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <html>\r\n            <head>\r\n                <style>\r\n                    \r\n                </style>\r\n            </head>\r\n            <body>\r\n                <div>\r\n                    <button onClick ={this.addCounter} \r\n                    style={{background:\"transparent\", borderColor:\"transparent\"}}>\r\n                        <img src =\"https://www.pngall.com/wp-content/uploads/2016/07/Cookie-Download-PNG.png\"/>\r\n                    </button>\r\n                    <br/>\r\n                    <button onClick ={this.resetCounter}>Empty Cookie Jar</button>\r\n                    <p>count = {this.state.count} cookies</p>\r\n                </div>\r\n            </body>\r\n            </html>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Button","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:8080/api/v1',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n})","import httpclient from \"../commons/httpclient\";\r\n\r\nconst getHello = () =>{\r\n    return httpclient.get('/hello')\r\n}\r\n\r\nexport default {getHello}","import { useEffect, useState } from \"react\";\r\nimport helloServices from \"../services/helloServices\";\r\n// class - stateful function\r\n// functions - stateless\r\n// react - reactive\r\nconst Hello = () =>{\r\n\r\n    // react hooks useState\r\n    const[hello, setHello] = useState(\"API is down...\") // inside this useState will be your defualt value when API is not ON\r\n\r\n    // react hooks useEffect\r\n    // axios - a tool for http request promises\r\n    // promises - these are asynchronous processes \r\n\r\n    useEffect ( () => { // anonymous function\r\n        helloServices.getHello()                             // this is the 'promise'\r\n        .then(response => {                                  // then-catch is try-catch equivalent for promises\r\n            setHello(response.data)\r\n        })                                                \r\n        .catch(err => {                                      // rejected promise\r\n            console.log(\"something went wrong...\")\r\n        })\r\n    }\r\n    )\r\n\r\n    return hello;\r\n}\r\n\r\nexport default Hello","import httpclient from \"../commons/httpclient\"\r\n\r\nconst getEmployees = () => {\r\n    return httpclient.get('/employees')\r\n} \r\n\r\nexport default {getEmployees}","import { useEffect, useState } from \"react\"\r\nimport EmployeeService from \"../services/employeeService\"\r\n\r\nconst Employee = () => {\r\n    const [employees, setEmployees] = useState([])\r\n\r\n    useEffect(\r\n        () => {\r\n            EmployeeService.getEmployees() // promise\r\n            .then(\r\n                response =>{\r\n                    setEmployees(response.data)\r\n                }\r\n            )\r\n            .catch(\r\n                () => {\r\n                    console.log(\"Sorry, not available :(\")\r\n                }\r\n            )\r\n        }\r\n    )\r\n\r\n    return (                                                                // jsx - we return a table instead\r\n        <div>\r\n            <h1>List of Employees</h1>\r\n            <div>\r\n                <table border = \"1\">\r\n                    <tr>\r\n                        <td>Department</td>\r\n                        <td>Location</td>\r\n                        <td>Name</td>\r\n                    </tr>\r\n                    {\r\n                        employees.map(\r\n                            employee => (\r\n                                <tr>\r\n                                    <td>{employee.department}</td>\r\n                                    <td>{employee.location}</td>\r\n                                    <td>{employee.name}</td>\r\n                                </tr>\r\n                            )\r\n                        )\r\n                    }\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employee","import logo from './logo.svg';          // imports from within the same folder because of './'\nimport './App.css';\nimport Greet from './components/Greet';\nimport Message from './components/Message';\nimport Button from './components/Button';\nimport Hello from './components/Hello';\nimport Employee from './components/Employee';\n// this is a functional component/stateless component\n// jsx = javascript xml\n\nfunction App() {                        \n  return (  \n    <html>  \n    <head>\n    <style>\n\n    </style> \n    </head>\n\n    <body>    \n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1> Welcome! </h1>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n        <b> brrrrrrrrrrr </b>\n        </p>\n        <p>{Hello()}</p>\n        <Employee/>\n        <Greet name=\"mico\"/>   \n        <Greet name=\"Sir\"/>\n        <Message/> \n        <Button/>\n        <p>waow daming cookis</p>              \n        <br/>\n        <img src=\"https://i.imgflip.com/3nm1gx.png\" \n        alt=\"yep\" style={{paddingBottom: 20}}/>\n\n      </header>\n    </div>\n    \n    </body>\n    </html> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />                   \n  </React.StrictMode>,\n  document.getElementById('root')       // this is the web element that we render\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}